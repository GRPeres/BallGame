from graphics import *
import random

# Cria a janela
win = GraphWin("Bolinha ...", 800, 600)

# Design
linhaSuperior = Line(Point(0, 40), Point(800, 40))
linhaSuperior.setWidth(10)
linhaSuperior.setFill(color_rgb(10, 100, 10))
linhaSuperior.draw(win)
# Design
linhaInferior = Line(Point(0, 550), Point(800, 550))
linhaInferior.setWidth(3)
linhaInferior.setFill(color_rgb(10, 100, 10))
linhaInferior.draw(win)

# Ball Design
col = 390
lin = 80
raio = 15
circulo = Circle(Point(col, lin), raio)
circulo.setFill(color_rgb(10, 10, 100))
circulo.draw(win)

# Gamescore UI
pts = -10
pontos = Text(Point(400, 575), "Pontos: " + str(pts))
pontos.setSize(14)
pontos.draw(win)

# Design da barra (antes do primeiro input)
colIni = 340
tamanho = 100
barra = Line(Point(colIni, 530), Point(colIni + tamanho, 530))
barra.setFill(color_rgb(100, 10, 10))
barra.setWidth(10)
barra.draw(win)

# Variaveis no Startup
levelSizeINC = 10
levelDistance = 100
Clock = .07  # Tempo entre uma atualizacao e outra do jogo
velocidade = 5
start = True
continuar = True

while continuar:
# Fisica do jogo

    # Aleatoriza a velocidade e direcao da bola no primeiro frame do jogo
    if start:
        passo = random.randrange(1, 10)
        if random.random() < 0.5:
            passo = -passo
        start = False

    if (col + raio + passo) > 800:
        passo = -passo
        if passo >= 0:
            levelDistance = levelDistance * 2
            passo += 5
        if passo <= 0:
            levelDistance = levelDistance * 2
            passo -= 5

    if (col - raio + passo) < 0:
        passo = -passo
        if passo >= 0:
            levelDistance = levelDistance * 2
            passo += 5
        if passo <= 0:
            levelDistance = levelDistance * 2
            passo -= 5

    if lin < 65:
        velocidade = -velocidade

        # Aumenta a dificuldade ao passar certa marca de pontos
        if pts >= levelDistance:
            #Incrementa a velocidade seja ela positiva ou negativa
            if velocidade >= 0:
                levelDistance = levelDistance * 2
                velocidade += 5
            if velocidade <= 0:
                levelDistance = levelDistance * 2
                velocidade -= 5

    if lin >= 515 and col > colIni and col < (colIni + tamanho):
        velocidade = -velocidade

        # Aumenta a dificuldade ao passar certa marca de pontos
        if pts >= levelDistance:
            # Incrementa a velocidade seja ela positiva ou negativa
            if velocidade >= 0:
                levelDistance = levelDistance * 2
                velocidade += 5
            if velocidade <= 0:
                levelDistance = levelDistance * 2
                velocidade -= 5

    # Nova posição do círculo
    circulo.undraw()
    col += passo
    lin += velocidade
    circulo = Circle(Point(col, lin), 15)
    circulo.setFill(color_rgb(10, 10, 100))
    circulo.draw(win)

    # Checa a cada tick pelo input do teclado
    tecla = win.checkKey()

    # Sair do joguinho
    if tecla == "Escape":
        continuar = False
        continue

    # Barra move para a direita
    if tecla == "Right" or tecla == "d":
        if (colIni + 20) < 701:
            colIni = colIni + 20

        barra.undraw()
        barra = Line(Point(colIni, 530), Point(colIni + 100, 530))
        barra.setFill(color_rgb(100, 10, 10))
        barra.setWidth(10)
        barra.draw(win)

    # Barra move para a esquerda
    if tecla == "Left" or tecla == "a":
        if (colIni - 20) > -1:
            colIni = colIni - 20

        barra.undraw()
        barra = Line(Point(colIni, 530), Point(colIni + 100, 530))
        barra.setFill(color_rgb(100, 10, 10))
        barra.setWidth(10)
        barra.draw(win)

    # atualiza os pontos a cada game-tick(clock)
    if lin <= 540:
        pontos.undraw()
        pts += 5
        pontos = Text(Point(400, 575), "Pontos: " + str(pts))
        pontos.draw(win)

    # Esse valor faz referência ao game-tick, ou seja, de quanto em quanto tempo o jogo atualiza
    time.sleep(Clock)

# Fechar a janela
win.close()
